{
  "formatVersion": 1,
  "database": {
    "version": 7,
    "identityHash": "02ca1756b67da4bfae48a48752c18b6b",
    "entities": [
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `first_name` TEXT NOT NULL, `last_name` TEXT NOT NULL, `email` TEXT NOT NULL, `password` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "firstName",
            "columnName": "first_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastName",
            "columnName": "last_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "password",
            "columnName": "password",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "userId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "movies",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`movieId` INTEGER NOT NULL, `overview` TEXT NOT NULL, `originalLanguage` TEXT NOT NULL, `originalTitle` TEXT NOT NULL, `video` INTEGER NOT NULL, `title` TEXT NOT NULL, `genreIds` TEXT NOT NULL, `posterPath` TEXT, `backdropPath` TEXT, `releaseDate` TEXT NOT NULL, `popularity` REAL NOT NULL, `voteAverage` REAL NOT NULL, `adult` INTEGER NOT NULL, `voteCount` INTEGER NOT NULL, PRIMARY KEY(`movieId`))",
        "fields": [
          {
            "fieldPath": "movieId",
            "columnName": "movieId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "overview",
            "columnName": "overview",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "originalLanguage",
            "columnName": "originalLanguage",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "originalTitle",
            "columnName": "originalTitle",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "video",
            "columnName": "video",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "genreIds",
            "columnName": "genreIds",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "posterPath",
            "columnName": "posterPath",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "backdropPath",
            "columnName": "backdropPath",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "releaseDate",
            "columnName": "releaseDate",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "popularity",
            "columnName": "popularity",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "voteAverage",
            "columnName": "voteAverage",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "adult",
            "columnName": "adult",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "voteCount",
            "columnName": "voteCount",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "movieId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "genres",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`genreId` INTEGER NOT NULL, `name` TEXT NOT NULL, PRIMARY KEY(`genreId`))",
        "fields": [
          {
            "fieldPath": "genreId",
            "columnName": "genreId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "genreId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "movie_genre_cross_ref",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`movieId` INTEGER NOT NULL, `genreId` INTEGER NOT NULL, PRIMARY KEY(`movieId`, `genreId`), FOREIGN KEY(`movieId`) REFERENCES `movies`(`movieId`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`genreId`) REFERENCES `genres`(`genreId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "movieId",
            "columnName": "movieId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "genreId",
            "columnName": "genreId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "movieId",
            "genreId"
          ]
        },
        "indices": [
          {
            "name": "index_movie_genre_cross_ref_movieId",
            "unique": false,
            "columnNames": [
              "movieId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_movie_genre_cross_ref_movieId` ON `${TABLE_NAME}` (`movieId`)"
          },
          {
            "name": "index_movie_genre_cross_ref_genreId",
            "unique": false,
            "columnNames": [
              "genreId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_movie_genre_cross_ref_genreId` ON `${TABLE_NAME}` (`genreId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "movies",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "movieId"
            ],
            "referencedColumns": [
              "movieId"
            ]
          },
          {
            "table": "genres",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "genreId"
            ],
            "referencedColumns": [
              "genreId"
            ]
          }
        ]
      },
      {
        "tableName": "pagination",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`page` INTEGER NOT NULL, `totalResults` INTEGER NOT NULL, `totalPages` INTEGER NOT NULL, PRIMARY KEY(`page`))",
        "fields": [
          {
            "fieldPath": "page",
            "columnName": "page",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalResults",
            "columnName": "totalResults",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalPages",
            "columnName": "totalPages",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "page"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "pagination_movies",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`page` INTEGER NOT NULL, `movieId` INTEGER NOT NULL, PRIMARY KEY(`page`, `movieId`), FOREIGN KEY(`page`) REFERENCES `pagination`(`page`) ON UPDATE NO ACTION ON DELETE NO ACTION , FOREIGN KEY(`movieId`) REFERENCES `movies`(`movieId`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "page",
            "columnName": "page",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "movieId",
            "columnName": "movieId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "page",
            "movieId"
          ]
        },
        "indices": [
          {
            "name": "index_pagination_movies_page",
            "unique": false,
            "columnNames": [
              "page"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_pagination_movies_page` ON `${TABLE_NAME}` (`page`)"
          },
          {
            "name": "index_pagination_movies_movieId",
            "unique": false,
            "columnNames": [
              "movieId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_pagination_movies_movieId` ON `${TABLE_NAME}` (`movieId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "pagination",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "page"
            ],
            "referencedColumns": [
              "page"
            ]
          },
          {
            "table": "movies",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "movieId"
            ],
            "referencedColumns": [
              "movieId"
            ]
          }
        ]
      },
      {
        "tableName": "pagination_favorite_movies",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`page` INTEGER NOT NULL, `userId` INTEGER NOT NULL, `movieId` INTEGER NOT NULL, `created_at` INTEGER, PRIMARY KEY(`page`, `userId`, `movieId`), FOREIGN KEY(`page`) REFERENCES `pagination`(`page`) ON UPDATE NO ACTION ON DELETE NO ACTION , FOREIGN KEY(`userId`) REFERENCES `users`(`userId`) ON UPDATE NO ACTION ON DELETE NO ACTION , FOREIGN KEY(`movieId`) REFERENCES `movies`(`movieId`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "page",
            "columnName": "page",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "movieId",
            "columnName": "movieId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "page",
            "userId",
            "movieId"
          ]
        },
        "indices": [
          {
            "name": "index_pagination_favorite_movies_page",
            "unique": false,
            "columnNames": [
              "page"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_pagination_favorite_movies_page` ON `${TABLE_NAME}` (`page`)"
          },
          {
            "name": "index_pagination_favorite_movies_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_pagination_favorite_movies_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_pagination_favorite_movies_movieId",
            "unique": false,
            "columnNames": [
              "movieId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_pagination_favorite_movies_movieId` ON `${TABLE_NAME}` (`movieId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "pagination",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "page"
            ],
            "referencedColumns": [
              "page"
            ]
          },
          {
            "table": "users",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "movies",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "movieId"
            ],
            "referencedColumns": [
              "movieId"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '02ca1756b67da4bfae48a48752c18b6b')"
    ]
  }
}